@model PhotoBookmart.DataLayer.Models.Distributors.Distributor
@{  
    if (Model.Id > 0)
    {
        ViewBag.Title = "Edit Distributor";
    }
    else
    {
        ViewBag.Title = "Add Distributor";
    }
}
<script type="text/javascript">

    jQuery(document).ready(function () {
        jQuery("#UserForm").submit(function () {
            // validate
            if (jQuery("#Name").val() == "") {
                alert("Please enter distributor name");
                jQuery("#Name").focus();
                return false;
            }

            if (jQuery("#Email").val() == "") {
                alert("Please enter distributor email");
                jQuery("#Email").focus();
                return false;
            }

            show_loading();

            // and post
            jQuery.post(jQuery(this).attr("action"), jQuery("#UserForm").serialize(), function (returnObj) {

                if (returnObj.Status == "success") {
                    if (returnObj.Message != null) {
                        notify_success("Success", returnObj.Message);
                        $("form input:text").val('');
                        $("form input:password").val('');
                        $("form textarea").val('');
                    }
                    else if (returnObj.RedirectUrl != null) {
                        window.location.href = returnObj.RedirectUrl;
                    }
                } else {
                    $.pnotify({
                        title: 'Error',
                        text: returnObj.Message,
                        type: 'error',
                        opacity: .8
                    });
                }

                hide_loading();
            });
            return false;
        });
    });
</script>

<div class="mws-panel grid_8">
    <div class="mws-panel-header">
        <span>@ViewBag.Title</span>
    </div>
    <div class="mws-panel-body no-padding">
        @using (Html.BeginForm("Update", "Distributor", FormMethod.Post, new { enctype = "multipart/form-data", @id = "UserForm", @class = "mws-form" }))
        {
            @Html.HiddenFor(m => m.Id)
            <div class="mws-form-inline">
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Name, new { @class="large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Email</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Email, new { @class="large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Phone</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Phone, new { @class="large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Address</label>
                    <div class="mws-form-item">
                        @Html.TextAreaFor(model=>model.Address,new {@class="large"})
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Other Information</label>
                    <div class="mws-form-item">
                        @Html.TextAreaFor(model=>model.OtherInfo,new {@class="large"})
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Status</label>
                    <div class="mws-form-item">
                        <select class="large" name="Status" id="Status">
                            <option value="0">Waiting for approve</option>
                            <option value="1" @if (Model.Status==1){ <text> selected </text> }>Approved</option>
                            <option value="2" @if (Model.Status==2){ <text> selected </text> }>Disabled</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="mws-button-row">
                <input type="submit" value="Submit" class="btn btn-danger">
                <input type="reset" value="Reset" class="btn ">
            </div>
        }
    </div>
</div>