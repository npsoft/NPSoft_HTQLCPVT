@model Site_Blog
@{  
    if (Model.Id > 0)
    {
        ViewBag.Title = "Edit Post " + Model.Name + " - " + Model.CategoryName;
    }
    else
    {
        ViewBag.Title = "Add Post " + " - " + Model.CategoryName;
    }

    if (Model.Tag == null)
    {
        Model.Tag = new List<string>();
    }
}
<script type="text/javascript">

    jQuery(document).ready(function () {

        $('.mws-spinner-decimal').spinner({
            step: 1,
            numberFormat: "n"
        });

        jQuery("#Form_tag").select2({
            tags: [],
            tokenSeparators: [","]
        });

        $('#date_begin,#date_end').datetimepicker({
            stepMinute: 5,
            onSelect: function (selectedDate, instance) {
                if (jQuery(this).attr("id") == "date_begin") {
                    $('#date_end').datetimepicker("option", "minDate", selectedDate);
                } else {
                    $('#date_begin').datetimepicker("option", "maxDate", selectedDate);
                }
            }
        });


        CKEDITOR.replace('content_id', {
            filebrowserImageUploadUrl: '@Url.Action("UploadImage", "Management")',
            height: "300"
        });

        jQuery("#UserForm").submit(function () {
            
            if (jQuery("#Name").val() == "") {
                alert("Please enter post name");
                jQuery("#Name").focus();
                return false;
            }
            return true;
        });
    });
</script>
<div class="head">
    <h3>@ViewBag.Title</h3>
    <div>
        <a href="@Url.Action("Detail", "Website", new { id = Model.SiteId })" class="btn">
            <i class="icol-arrow-left"></i>@CurrentWebsite.Name Detail
        </a>
        <a href="@Url.Action("Category", "WebsiteBlog", new { id = Model.SiteId })" class="btn">
            <i class="icol-arrow-left"></i>Blogs Management
        </a>
        <a href="@Url.Action("Index", "WebsiteBlog", new { cat_id = Model.CategoryId })" class="btn">
            <i class="icol-arrow-left"></i>@Model.CategoryName Management
        </a>
    </div>
</div>
<div class="mws-panel grid_8">
    <div class="mws-panel-header">
        <span>@ViewBag.Title</span>
    </div>
    <div class="mws-panel-body no-padding">
        @using (Html.BeginForm("Update", "WebsiteBlog", FormMethod.Post, new { enctype = "multipart/form-data", @id = "UserForm", @class = "mws-form" }))
        {
            @Html.HiddenFor(m => m.Id);
            @Html.HiddenFor(m => m.CategoryId);
            @Html.HiddenFor(m => m.SiteId);                                      
            @Html.HiddenFor(m => m.LanguageCode);
            @Html.HiddenFor(m => m.CategoryName);
            <div class="mws-form-block">
                @if (ViewBag.Error != null)
                {
                    <div class="mws-form-message error">
                        @ViewBag.Error
                    </div>
                }
                <div class="mws-form-row">
                    <label class="mws-form-label">Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Name, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Seo Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.SeoName, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Intro</label>
                    <div class="mws-form-item">
                        @Html.TextAreaFor(m => m.ShortIntro, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Content</label>
                    <div class="mws-form-item">
                        @Html.TextAreaFor(m => m.Desc, new { @class = "large", @id = "content_id" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Tag</label>
                    <div class="mws-form-item">
                        <input type="hidden" name="Tag" id="Form_tag" class="large" value="@String.Join(",", Model.Tag)"/>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Order</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(m => m.Order, new { @class = "mws-spinner-decimal large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Publish by Schedule</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="PublishSchedule" value="true" type="checkbox" data-label-on="Enable" data-label-off="Disable" @if (Model.PublishSchedule) { <text>checked="checked"</text> }>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Publish On</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(mbox => mbox.PublishOn, new { @id = "date_begin", @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Un-Publish On</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(mbox => mbox.UnPublishOn, new { @id = "date_end", @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Active</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="IsActive" value="true" type="checkbox" data-label-on="Enable" data-label-off="Disable" @if (Model.IsActive) { <text> checked="checked" </text> }>
                    </div>
                </div>
            </div>
            <div class="mws-button-row">
                <input type="submit" value="Submit" class="btn btn-danger">
                <input type="reset" value="Reset" class="btn ">
            </div>
        }
    </div>
</div>