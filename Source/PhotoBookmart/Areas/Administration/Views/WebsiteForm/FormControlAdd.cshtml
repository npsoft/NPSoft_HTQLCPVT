@model Site_Form_Controls
@{  
    if (Model.Id > 0)
    {
        ViewBag.Title = "Edit Form Control " + Model.Name + " - Form " + Model.FormName;
    }
    else
    {
        ViewBag.Title = "Create Form Control - Form " + Model.FormName;
    }
    var DataType = Db.Where<Site_Form_DataType>(m => m.Status);
}
<script type="text/javascript">

    jQuery(document).ready(function () {

        jQuery("#UserForm").submit(function () {
            
            show_loading();

            // and post
            jQuery.post(jQuery(this).attr("action"), jQuery("#UserForm").serialize(), function (returnObj) {

                if (returnObj.Status == "success") {
                    if (returnObj.Message != null) {
                        notify_success("Success", returnObj.Message);
                    }
                    else if (returnObj.RedirectUrl != null) {
                        window.location.href = returnObj.RedirectUrl;
                    }
                } else {
                    $.pnotify({
                        title: 'Error',
                        text: returnObj.Message,
                        type: 'error',
                        opacity: .8
                    });
                }

                hide_loading();
            });
            return false;
        });
    });
</script>
<div class="mws-panel grid_8">
    <div class="mws-panel-header">
        <span>@ViewBag.Title</span>
    </div>
    <div class="mws-panel-body no-padding">
        @using (Html.BeginForm("FormControlUpdate", "WebsiteForm", FormMethod.Post, new { enctype = "multipart/form-data", @id = "UserForm", @class = "mws-form" }))
        {
            <input type=hidden name="Id" value="@Model.Id" />
            @Html.HiddenFor(m => m.FormId)
            <div class="mws-form-inline">
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Name, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Datatype</label>
                    <div class="mws-form-item">
                        <select name="DataTypeId" class="large">
                            @foreach (var item in DataType)
                            {
                                <option value="@item.Id" @if (Model.DataTypeId == item.Id){ <text>selected</text>}>@item.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Default Value</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.DefaultValue, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Status</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="Status" value="true" type="checkbox" data-label-on="Enable" data-label-off="Disable" @if (Model.Status)
                                                                                                                                          {<text>checked="checked"</text>}>
                    </div>
                </div>
            </div>
            <div class="mws-button-row">
                <input type="submit" value="Submit" class="btn btn-danger">
                <input type="reset" value="Reset" class="btn ">
            </div>
        }
    </div>
</div>
