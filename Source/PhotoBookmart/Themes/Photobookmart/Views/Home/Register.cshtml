@model ABUserAuth
@{
    Layout = "~/Themes/Photobookmart/Views/Shared/_Layout.Navigation.Sidebar.cshtml";

    ViewBag.Title = "Register";
}
@section _TitleMain {
    <a href='@Url.Action("Register", "Home", new { })' rel='register' title='Permanent Link: Register'>Register</a>
}
@section _TrailLink {
    <a href="/" rel="/" title="Home" class="trail-begin">Home</a> <span class="sep">&raquo;</span>
    <span class="trail-end">Register</span>
}
<form id="frmRegister" name="frmRegister" action="/Home/RegisterSubmit" method="post" class="ab-form ab-register">
    @Html.HiddenFor(x => x.RedirectTo)
    <div class="ab-title display-none">
        <h2>Register</h2>
    </div>
    @if (ViewBag.Error != null)
    {
        <div class="ab-error">
            @ViewBag.Error
        </div>
    }
    <div class="row-fluid">
        <div @*class="span12"*@>
            <label>Email<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.Email, new { @class="ab-textbox", @maxlength = "50" })
        </div>    
        @*<div class="span6">
            <label>Username<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.UserName, new { @class="ab-textbox" })
        </div>*@
    </div>
    <div class="row-fluid">
        <div class="span6">
            <label>Password<span class="ab-required">*</span></label>
            @Html.PasswordFor(m => m.Password, new { @class="ab-textbox" })
        </div>
        <div class="span6">
            <label>Confirm Password<span class="ab-required">*</span></label>
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class="ab-textbox" })
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <label>First Name<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.FirstName, new { @class="ab-textbox" })
        </div>
        <div class="span6">
            <label>Last Name<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.LastName, new { @class="ab-textbox" })
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <label>Address<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.Addr, new { @class="ab-textbox", @maxlength = "30" })
        </div>
        <div class="span6">
            <label>State<span class="ab-required">*</span></label>
            <select name="States" class="ab-combobox"></select>
            @Html.TextBoxFor(m => m.States, new { @class="ab-textbox", @maxlength = "30" })
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <label>Country<span class="ab-required">*</span></label>
            <select name="Country" class="ab-combobox">
                @{
                    var countries = Db.Where<Country>(x=>x.Status);
                
                    foreach(var x in countries ?? Enumerable.Empty<Country>())
                    {
                        if (Model.Country == x.Code)
                        {
                            <option value="@x.Code" selected="selected">@x.Name</option>
                        }
                        else
                        {
                            <option value="@x.Code">@x.Name</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="span6">
            <label>City<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.City, new { @class="ab-textbox", @maxlength = "30" })
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <label>Zip Code<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.PostalCode, new { @class="ab-textbox", @maxlength = "9" })
        </div>
        <div class="span6">
            <label>Phone Number<span class="ab-required">*</span></label>
            @Html.TextBoxFor(m => m.Phone, new { @class="ab-textbox", @maxlength = "16" })
        </div>
    </div>
    <div class="ab-action align-right">
        <button type="submit" class="ab-submit">Submit</button>
        <button type="reset" class="ab-reset">Reset</button>
    </div>
</form>

<script>
    jQuery(document).ready(function ($) {

        if ($("#frmRegister").length != 0) {

            jQuery("#frmRegister select[name='Country']").on("change", function (e) {
                $this = jQuery(this);
                if ($this.val() == "MY") {
                    jQuery.post("/Home/GetStatesForMalaysia", {}, function (data) {
                        if (data.HasVal) {
                            var options = "";
                            var val = jQuery("#frmRegister input[name='States']").val();
                            for (var i = 0; i < data.Data.length; i++) {
                                if (val == data.Data[i].State) {
                                    options += "<option value='" + data.Data[i].State + "' selected='selected'>" + data.Data[i].State + "</option>";
                                } else {
                                    options += "<option value='" + data.Data[i].State + "'>" + data.Data[i].State + "</option>";
                                }
                            }
                            jQuery("#frmRegister select[name='States']").html(options);
                            jQuery("#frmRegister input[name='States']").prop("disabled", true);
                            jQuery("#frmRegister input[name='States']").css("display", "none");
                            jQuery("#frmRegister select[name='States']").prop("disabled", false);
                            jQuery("#frmRegister select[name='States']").css("display", "block");
                        } else {
                            jQuery("#frmRegister select[name='States']").prop("disabled", true);
                            jQuery("#frmRegister select[name='States']").css("display", "none");
                            jQuery("#frmRegister input[name='States']").prop("disabled", false);
                            jQuery("#frmRegister input[name='States']").css("display", "block");
                        }
                    });
                } else {
                    jQuery("#frmRegister select[name='States']").prop("disabled", true);
                    jQuery("#frmRegister select[name='States']").css("display", "none");
                    jQuery("#frmRegister input[name='States']").prop("disabled", false);
                    jQuery("#frmRegister input[name='States']").css("display", "block");
                }
            });

            setTimeout('jQuery("#frmRegister select[name=\'Country\']").trigger("change")', 100);

            $("#frmRegister").on("submit", function (e) {

                if ($(this).find("input[name='Email']").val() == "" ||
                    $(this).find("input[name='UserName']").val() == "" ||
                    $(this).find("input[name='Password']").val() == "" ||
                    $(this).find("input[name='ConfirmPassword']").val() == "" ||
                    $(this).find("input[name='FirstName']").val() == "" ||
                    $(this).find("input[name='LastName']").val() == "" ||
                    $(this).find("input[name='Country']").val() == "" ||
                    $(this).find("[name='States']:not(:disabled)").val() == "" ||
                    $(this).find("input[name='City']").val() == "" ||
                    $(this).find("input[name='PostalCode']").val() == "" ||
                    $(this).find("input[name='Phone']").val() == "") {

                    alert("Please enter all required fields.");

                    e.preventDefault();

                    e.unbind();
                }

                if (!isEmail($(this).find("input[name='Email']").val())) {
                    
                    alert("Email format is not valid.");

                    e.preventDefault();

                    e.unbind();
                }

                if ($(this).find("input[name='Password']").val() != $(this).find("input[name='ConfirmPassword']").val()) {

                    alert("Please enter same Password and Re password fields.");

                    e.preventDefault();

                    e.unbind();
                }

                if (!/(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/.test($(this).find("input[name='Password']").val())) {

                    alert("Password must contain at least 8 characters, including uppercase/lowercase and numbers.");

                    return false;
                }
            });
        }
    });
</script>
@{
    Db.Close();
}